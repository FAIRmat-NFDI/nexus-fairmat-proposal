.. auto-generated by script ../../../../utils/nxdl2rst.py from the NXDL source NXcg_alpha_shape.nxdl.xml

.. index::
    ! NXcg_alpha_shape (base class)
    ! cg_alpha_shape (base class)
    see: cg_alpha_shape (base class); NXcg_alpha_shape

.. _NXcg_alpha_shape:

================
NXcg_alpha_shape
================

**Status**:

  base class, extends :ref:`NXobject`

**Description**:

  Computational geometry description of alpha shapes or wrappings to primitives.

  For details see:

  * https://dx.doi.org/10.1109/TIT.1983.1056714 for 2D,
  * https://dx.doi.org/10.1145/174462.156635 for 3D,
  * https://dl.acm.org/doi/10.5555/871114 for weighted, and
  * https://doc.cgal.org/latest/Alpha_shapes_3 for 3D implementation
  * https://doc.cgal.org/latest/Manual/packages.html#PkgAlphaWrap3 for 3D wrap

  in CGAL, the Computational Geometry Algorithms Library.
  As a starting point, we follow the conventions of the CGAL library.

**Symbols**:

  The symbols used in the schema to specify e.g. dimensions of arrays.

  **d**: The dimensionality of the alpha shape, for now 2 or 3.

  **n_e**: The number of edges.

  **n_f**: The number of faces.

  **n_c**: The number of cells.

**Groups cited**:
  :ref:`NXcg_point_set`, :ref:`NXcg_tetrahedron_set`, :ref:`NXcg_triangle_set`

.. index:: NXcg_point_set (base class); used in base class, NXcg_triangle_set (base class); used in base class, NXcg_tetrahedron_set (base class); used in base class

**Structure**:

  .. _/NXcg_alpha_shape/dimensionality-field:

  .. index:: dimensionality (field)

  **dimensionality**: (optional) :ref:`NX_UINT <NX_UINT>` {units=\ :ref:`NX_UNITLESS <NX_UNITLESS>`}


    Any of these values: ``2`` | ``3``

  .. _/NXcg_alpha_shape/version-field:

  .. index:: version (field)

  **version**: (optional) :ref:`NX_CHAR <NX_CHAR>`

    Specify which general type of alpha shape is computed.
    Using for now the CGAL terminology. Basic means (unweighted) alpha shapes.
    Alpha_wrapping means meshes created using alpha wrapping procedures.

    Any of these values: ``basic`` | ``alpha_wrapping``

  .. _/NXcg_alpha_shape/mode-field:

  .. index:: mode (field)

  **mode**: (optional) :ref:`NX_CHAR <NX_CHAR>`

    Specifically when computed with the CGAL, the mode specifies if singular 
    faces are removed (regularized) of the alpha complex.

    Any of these values: ``general`` | ``regularized``

  .. _/NXcg_alpha_shape/alpha-field:

  .. index:: alpha (field)

  **alpha**: (optional) :ref:`NX_NUMBER <NX_NUMBER>` {units=\ :ref:`NX_LENGTH <NX_LENGTH>`}

    The alpha, (radius of the alpha-sphere) parameter to be used for alpha
    shapes and alpha wrappings.

  .. _/NXcg_alpha_shape/offset-field:

  .. index:: offset (field)

  **offset**: (optional) :ref:`NX_NUMBER <NX_NUMBER>` {units=\ :ref:`NX_LENGTH <NX_LENGTH>`}

    The offset distance parameter to be used in addition to alpha
    in the case of alpha_wrapping.

  .. _/NXcg_alpha_shape/s-group:

  **s**: (optional) :ref:`NXcg_point_set`

    Point cloud for which the alpha shape or wrapping should be computed.

  .. _/NXcg_alpha_shape/t-group:

  **t**: (optional) :ref:`NXcg_triangle_set`

    Triangle soup for which the alpha wrapping should be computed.

  .. _/NXcg_alpha_shape/triangulation-group:

  **triangulation**: (optional) :ref:`NXcg_triangle_set`

    A meshed representation of the resulting shape.

  .. _/NXcg_alpha_shape/interior_cells-group:

  **interior_cells**: (optional) :ref:`NXcg_tetrahedron_set`



Hypertext Anchors
-----------------

List of hypertext anchors for all groups, fields,
attributes, and links defined in this class.


* :ref:`/NXcg_alpha_shape/alpha-field </NXcg_alpha_shape/alpha-field>`
* :ref:`/NXcg_alpha_shape/dimensionality-field </NXcg_alpha_shape/dimensionality-field>`
* :ref:`/NXcg_alpha_shape/interior_cells-group </NXcg_alpha_shape/interior_cells-group>`
* :ref:`/NXcg_alpha_shape/mode-field </NXcg_alpha_shape/mode-field>`
* :ref:`/NXcg_alpha_shape/offset-field </NXcg_alpha_shape/offset-field>`
* :ref:`/NXcg_alpha_shape/s-group </NXcg_alpha_shape/s-group>`
* :ref:`/NXcg_alpha_shape/t-group </NXcg_alpha_shape/t-group>`
* :ref:`/NXcg_alpha_shape/triangulation-group </NXcg_alpha_shape/triangulation-group>`
* :ref:`/NXcg_alpha_shape/version-field </NXcg_alpha_shape/version-field>`

**NXDL Source**:
  https://github.com/nexusformat/definitions/blob/main/base_classes/NXcg_alpha_shape.nxdl.xml
