.. auto-generated by script ../../../../utils/nxdl2rst.py from the NXDL source NXevent_data_em.nxdl.xml

.. index::
    ! NXevent_data_em (base class)
    ! event_data_em (base class)
    see: event_data_em (base class); NXevent_data_em

.. _NXevent_data_em:

===============
NXevent_data_em
===============

**Status**:

  base class, extends :ref:`NXobject`

**Description**:

  Metadata and settings of an electron microscope for scans and images.

  The need for such a structuring of data is evident from the fact that
  electron microscopes are dynamic. Oftentimes it suffices to calibrate the
  instrument at the start of the session. Subsequently, data (images, spectra, etc.)
  can be collected. Users may wish to take only a single scan or image and
  complete their microscope session; however

  frequently users are much longer at the microscope, recalibrate and take
  multiple data items (scans, images, spectra). Each item comes with own detector
  and on-the-fly processing settings and calibrations.

  For the single data item use case one may argue that the need for an additional
  grouping is redundant. Instead, the metadata could equally be stored inside
  the respective groups of the top-level mandatory NXinstrument group.
  On the flip side, even for a session with a single image, it would also not
  harm to nest the data.

  In fact, oftentimes scientists feel that there is a need to store details
  about eventual drift of the specimen in its holder (if such data is available)
  or record changes to the lens excitations caused or apertures used.
  Although current microscopes are usually equipped with stabilization
  systems for many of the individual components, it can still be useful
  to store time-dependent data in detail.

  Another reason if not a need for having more finely granularizable options for
  storing time-dependent data, is that over the course of a session one may
  reconfigure the microscope. What is a reconfiguration? This could be the
  change of an aperture mode because a scientist may first collect an image
  with some aperture and then choose a different value. As the aperture affects
  the electron beam it will affect the system.

  Let aside for a moment the technology and business models, an EM could be
  monitored (and will likely become so more in the future) for streaming out
  spatio-temporal details about its components, locations of objects,
  and eventually (externally) applied stimuli and positioning of the specimen.

  Some snapshot or integrated data from this stream are relevant for understanding
  signal genesis and electron/ion-beam-sample interaction (paths). In such a generic
  case it might be necessary to sync these streaming data with those intervals
  in time when specific measurements are taken (spectra collected,
  images taken, diffraction images indexed on-the-fly).

  Theoretically, an instrument and specimen should be considered as dynamic.
  Scientists often report or feel (difficult to quantify) observations that
  microscopes *perform differently* across sessions, without sometimes being
  able to identify clear root causes. Users of the instrument may consider
  such conditions impractical, or *too poor* and thus either abort their session
  or try to bring the microscope first into a state where conditions are considered
  stable and of high enough quality to reuse data collection.

  In all these cases it is practical to store time-dependent data of the
  instrument state not in the respective instrument component groups
  of the top-level NXinstrument but in a sort of a log of event data.
  This is the idea behind the NXevent_data_em snapshot containers.

  Ideally, NXevent_data_em are equipped with a start_time and end_time
  to represent a time interval (remind the idea of the instrument state stream)
  during which the scientist considered (or practically has to consider)
  the microscope (especially ebeam and specimen) as stable enough.

  Arguably it is oftentimes tricky to specify a clear time interval when the
  microscope is stable enough. Take for instance the acquisition of an image
  or spectra stack. It is not fully possible (technically) to avoid that even
  within a single image instabilities of the beam are faced and drift occurs.
  But does this warrant to document the microscope state at an even finer
  and impractical in-between one collects signal time intervals?

  This is a question of how finely does one granularize pieces of information.
  A possible solution is to consider each probed position, i.e. point in time
  when the beam was not blanked and illuminates a portion of the material, i.e.
  the interaction volume, whose signal contributions are then counted by the
  detector(s) as per pixel- or per voxel signal in the region-of-interest.
  In principle this application definition allows for such doing so.
  However, in most cases such a fine granularization would demand the collection
  of data which are as of now hardly retrievable with commercial instruments
  nor of primary interest.

  A frequently made choice, mainly for convenience, is that drift and scan distortions
  are considered a feature or inaccuracy of the image and/or spectrum and thus
  one de facto accepts that the microscope was not as stable as expected during
  the acquisition of the image. We learn that the idea of a time interval
  during the microscope session may be interpreted differently by different
  users. Here we consider the choice to focus on images and spectra, and eventually
  single position measurements as the smallest granularization level.
  Which eventually may require to add optional NXprocess instances for respectively
  collected data to describe the relevant distortions. Nevertheless, the distortions
  are typically corrected for by numerical protocols. Which warrant an own 
  consideration in the future. A more detailed overview of such computational
  steps to cope with scan distortions is available in the literature:

  * `C. Ophus et al. <https://dx.doi.org/10.1016/j.ultramic.2015.12.002>`_  
  * `B. Berkels et al. <https://doi.org/10.1016/j.ultramic.2018.12.016>`_  
  * `L. Jones et al. <https://link.springer.com/article/10.1186/s40679-015-0008-4>`_

  For specific simulation purposes, mainly in an effort to digitally repeat
  or simulate the experiment, it is tempting to consider dynamics of the
  instrument, implemented as time-dependent functional descriptions of
  e.g. lens excitations, beam shape functions, trajectories of groups of
  electrons, or detector noise models.

  For now the preferred strategy to handle these cases is through
  customizations of the specific fields within NXevent_data_em instances.

  Another alternative could be to sample finer, eventually dissimilarly along
  the time axis; however this may cause situations where an NXevent_data_em
  instance does not contain specific measurements
  (i.e. images, spectra of scientific relevance).

  In this case one should better go for a customized application definition
  with a functional property description inside members (fields or groups)
  in NXevent_data_em instances; or resort to a specific offspring application
  definition of NXem which documents metadata for tracking explicitly electrons
  (with ray-tracing based descriptors/computational geometry descriptors)
  or tracking of wave bundles.

  This perspective on much more subtle time-dependent considerations of electron
  microscopy can be advantageous also for storing details of time-dependent
  additional components that are coupled to and/or synced with a microscope.

  Examples include cutting-edge experiments where the electron beam gets
  coupled/excited by e.g. lasers. In this case, the laser unit should be
  registered under the top-level NXinstrument section. Its spatio-temporal
  details could be stored inside respective groups of the NXinstrument though
  inside instances of here detailed NXevent_data_em.

**Symbols**:

  No symbol table

**Groups cited**:
  :ref:`NXebeam_column`, :ref:`NXibeam_column`, :ref:`NXimage_set_em_adf`, :ref:`NXimage_set_em_bf`, :ref:`NXimage_set_em_bse`, :ref:`NXimage_set_em_chamber`, :ref:`NXimage_set_em_df`, :ref:`NXimage_set_em_diffrac`, :ref:`NXimage_set_em_ecci`, :ref:`NXimage_set_em_kikuchi`, :ref:`NXimage_set_em_ronchigram`, :ref:`NXimage_set_em_se`, :ref:`NXinstrument`, :ref:`NXinteraction_vol_em`, :ref:`NXoptical_system_em`, :ref:`NXprocess`, :ref:`NXscanbox_em`, :ref:`NXspectrum_set_em_auger`, :ref:`NXspectrum_set_em_cathodolum`, :ref:`NXspectrum_set_em_eels`, :ref:`NXspectrum_set_em_xray`, :ref:`NXuser`

.. index:: NXimage_set_em_se (base class); used in base class, NXimage_set_em_bse (base class); used in base class, NXimage_set_em_ecci (base class); used in base class, NXimage_set_em_bf (base class); used in base class, NXimage_set_em_df (base class); used in base class, NXimage_set_em_adf (base class); used in base class, NXimage_set_em_kikuchi (base class); used in base class, NXimage_set_em_diffrac (base class); used in base class, NXspectrum_set_em_xray (base class); used in base class, NXspectrum_set_em_eels (base class); used in base class, NXspectrum_set_em_auger (base class); used in base class, NXspectrum_set_em_cathodolum (base class); used in base class, NXimage_set_em_ronchigram (base class); used in base class, NXimage_set_em_chamber (base class); used in base class, NXinstrument (base class); used in base class, NXebeam_column (base class); used in base class, NXibeam_column (base class); used in base class, NXscanbox_em (base class); used in base class, NXoptical_system_em (base class); used in base class, NXuser (base class); used in base class, NXinteraction_vol_em (base class); used in base class, NXprocess (base class); used in base class

**Structure**:

  .. _/NXevent_data_em/start_time-field:

  .. index:: start_time (field)

  **start_time**: (optional) :ref:`NX_DATE_TIME <NX_DATE_TIME>`

    ISO 8601 time code with local time zone offset to UTC information included
    when the snapshot time interval started. If the user wishes to specify an
    interval of time that the snapshot should represent during which the instrument
    was stable and configured using specific settings and calibrations,
    the start_time is the start (left bound of the time interval) while
    the end_time specifies the end (right bound) of the time interval.

  .. _/NXevent_data_em/end_time-field:

  .. index:: end_time (field)

  **end_time**: (optional) :ref:`NX_DATE_TIME <NX_DATE_TIME>`

    ISO 8601 time code with local time zone offset to UTC information included
    when the snapshot time interval ended.

  .. _/NXevent_data_em/event_identifier-field:

  .. index:: event_identifier (field)

  **event_identifier**: (optional) :ref:`NX_CHAR <NX_CHAR>`

    Reference to a specific state and setting of the microscope components.

  .. _/NXevent_data_em/event_type-field:

  .. index:: event_type (field)

  **event_type**: (optional) :ref:`NX_CHAR <NX_CHAR>`

    Which specific event/measurement type. Examples are:

    * In-lens/backscattered electron, usually has quadrants  
    * Secondary_electron, image, topography, fractography, overview images  
    * Backscattered_electron, image, Z or channeling contrast (ECCI)  
    * Bright_field, image, TEM  
    * Dark_field, image, crystal defects  
    * Annular dark field, image (medium- or high-angle), TEM  
    * Diffraction, image, TEM, or a comparable technique in the SEM  
    * Kikuchi, image, SEM EBSD and TEM diffraction  
    * X-ray spectra (point, line, surface, volume), composition EDS/EDX(S)  
    * Electron energy loss spectra for points, lines, surfaces, TEM  
    * Auger, spectrum, (low Z contrast element composition)  
    * Cathodoluminescence (optical spectra)  
    * Ronchigram, image, alignment utility specifically in TEM  
    * Chamber, e.g. TV camera inside the chamber, education purposes.

  .. _/NXevent_data_em/detector_identifier-field:

  .. index:: detector_identifier (field)

  **detector_identifier**: (optional) :ref:`NX_CHAR <NX_CHAR>`

    The detector or set of detectors that was used to collect this signal.
    The name of the detector has to match the names used for available
    detectors, i.e. if the instrument has an *ebsd_camera*
    named detector, instances of NXimage_em_kikuchi should use
    *ebsd_camera* as the detector name.

  .. _/NXevent_data_em/IMAGE_SET_EM_SE-group:

  **IMAGE_SET_EM_SE**: (optional) :ref:`NXimage_set_em_se`


  .. _/NXevent_data_em/IMAGE_SET_EM_BSE-group:

  **IMAGE_SET_EM_BSE**: (optional) :ref:`NXimage_set_em_bse`


  .. _/NXevent_data_em/IMAGE_SET_EM_ECCI-group:

  **IMAGE_SET_EM_ECCI**: (optional) :ref:`NXimage_set_em_ecci`


  .. _/NXevent_data_em/IMAGE_SET_EM_BF-group:

  **IMAGE_SET_EM_BF**: (optional) :ref:`NXimage_set_em_bf`


  .. _/NXevent_data_em/IMAGE_SET_EM_DF-group:

  **IMAGE_SET_EM_DF**: (optional) :ref:`NXimage_set_em_df`


  .. _/NXevent_data_em/IMAGE_SET_EM_ADF-group:

  **IMAGE_SET_EM_ADF**: (optional) :ref:`NXimage_set_em_adf`


  .. _/NXevent_data_em/IMAGE_SET_EM_KIKUCHI-group:

  **IMAGE_SET_EM_KIKUCHI**: (optional) :ref:`NXimage_set_em_kikuchi`


  .. _/NXevent_data_em/IMAGE_SET_EM_DIFFRAC-group:

  **IMAGE_SET_EM_DIFFRAC**: (optional) :ref:`NXimage_set_em_diffrac`


  .. _/NXevent_data_em/SPECTRUM_SET_EM_XRAY-group:

  **SPECTRUM_SET_EM_XRAY**: (optional) :ref:`NXspectrum_set_em_xray`


  .. _/NXevent_data_em/SPECTRUM_SET_EM_EELS-group:

  **SPECTRUM_SET_EM_EELS**: (optional) :ref:`NXspectrum_set_em_eels`


  .. _/NXevent_data_em/SPECTRUM_SET_EM_AUGER-group:

  **SPECTRUM_SET_EM_AUGER**: (optional) :ref:`NXspectrum_set_em_auger`


  .. _/NXevent_data_em/SPECTRUM_SET_EM_CATHODOLUM-group:

  **SPECTRUM_SET_EM_CATHODOLUM**: (optional) :ref:`NXspectrum_set_em_cathodolum`


  .. _/NXevent_data_em/IMAGE_SET_EM_RONCHIGRAM-group:

  **IMAGE_SET_EM_RONCHIGRAM**: (optional) :ref:`NXimage_set_em_ronchigram`


  .. _/NXevent_data_em/IMAGE_SET_EM_CHAMBER-group:

  **IMAGE_SET_EM_CHAMBER**: (optional) :ref:`NXimage_set_em_chamber`


  .. _/NXevent_data_em/em_lab-group:

  **em_lab**: (optional) :ref:`NXinstrument`

    A group where specific settings of the instrument during the
    event can be captured. This is the preferred way to keep track of
    different settings of the microscope during the session.
    For instance, a user may first take an overview image with different
    magnification and settings and then start a spectrum analyses.
    These should be stored as two NXevent_data_em instances in an
    application definition. Each storing the specific settings.

    NXfabrication relevant details should not be repeated because
    we assume that the session is with the same microscope.
    Namely, it is hopefully not happening that someone builds out a
    component of the microscope while is taking a measurement with it.
    For this reason the specialized NXinstrument here contains no
    NXfabrication group.

    .. _/NXevent_data_em/em_lab/EBEAM_COLUMN-group:

    **EBEAM_COLUMN**: (optional) :ref:`NXebeam_column`


    .. _/NXevent_data_em/em_lab/IBEAM_COLUMN-group:

    **IBEAM_COLUMN**: (optional) :ref:`NXibeam_column`


    .. _/NXevent_data_em/em_lab/ebeam_deflector-group:

    **ebeam_deflector**: (optional) :ref:`NXscanbox_em`


    .. _/NXevent_data_em/em_lab/ibeam_deflector-group:

    **ibeam_deflector**: (optional) :ref:`NXscanbox_em`


    .. _/NXevent_data_em/em_lab/OPTICAL_SYSTEM_EM-group:

    **OPTICAL_SYSTEM_EM**: (optional) :ref:`NXoptical_system_em`


    .. _/NXevent_data_em/em_lab/USER-group:

    **USER**: (optional) :ref:`NXuser`


  .. _/NXevent_data_em/INTERACTION_VOL_EM-group:

  **INTERACTION_VOL_EM**: (optional) :ref:`NXinteraction_vol_em`


  .. _/NXevent_data_em/PROCESS-group:

  **PROCESS**: (optional) :ref:`NXprocess`



Hypertext Anchors
-----------------

List of hypertext anchors for all groups, fields,
attributes, and links defined in this class.


* :ref:`/NXevent_data_em/detector_identifier-field </NXevent_data_em/detector_identifier-field>`
* :ref:`/NXevent_data_em/em_lab-group </NXevent_data_em/em_lab-group>`
* :ref:`/NXevent_data_em/em_lab/EBEAM_COLUMN-group </NXevent_data_em/em_lab/EBEAM_COLUMN-group>`
* :ref:`/NXevent_data_em/em_lab/ebeam_deflector-group </NXevent_data_em/em_lab/ebeam_deflector-group>`
* :ref:`/NXevent_data_em/em_lab/IBEAM_COLUMN-group </NXevent_data_em/em_lab/IBEAM_COLUMN-group>`
* :ref:`/NXevent_data_em/em_lab/ibeam_deflector-group </NXevent_data_em/em_lab/ibeam_deflector-group>`
* :ref:`/NXevent_data_em/em_lab/OPTICAL_SYSTEM_EM-group </NXevent_data_em/em_lab/OPTICAL_SYSTEM_EM-group>`
* :ref:`/NXevent_data_em/em_lab/USER-group </NXevent_data_em/em_lab/USER-group>`
* :ref:`/NXevent_data_em/end_time-field </NXevent_data_em/end_time-field>`
* :ref:`/NXevent_data_em/event_identifier-field </NXevent_data_em/event_identifier-field>`
* :ref:`/NXevent_data_em/event_type-field </NXevent_data_em/event_type-field>`
* :ref:`/NXevent_data_em/IMAGE_SET_EM_ADF-group </NXevent_data_em/IMAGE_SET_EM_ADF-group>`
* :ref:`/NXevent_data_em/IMAGE_SET_EM_BF-group </NXevent_data_em/IMAGE_SET_EM_BF-group>`
* :ref:`/NXevent_data_em/IMAGE_SET_EM_BSE-group </NXevent_data_em/IMAGE_SET_EM_BSE-group>`
* :ref:`/NXevent_data_em/IMAGE_SET_EM_CHAMBER-group </NXevent_data_em/IMAGE_SET_EM_CHAMBER-group>`
* :ref:`/NXevent_data_em/IMAGE_SET_EM_DF-group </NXevent_data_em/IMAGE_SET_EM_DF-group>`
* :ref:`/NXevent_data_em/IMAGE_SET_EM_DIFFRAC-group </NXevent_data_em/IMAGE_SET_EM_DIFFRAC-group>`
* :ref:`/NXevent_data_em/IMAGE_SET_EM_ECCI-group </NXevent_data_em/IMAGE_SET_EM_ECCI-group>`
* :ref:`/NXevent_data_em/IMAGE_SET_EM_KIKUCHI-group </NXevent_data_em/IMAGE_SET_EM_KIKUCHI-group>`
* :ref:`/NXevent_data_em/IMAGE_SET_EM_RONCHIGRAM-group </NXevent_data_em/IMAGE_SET_EM_RONCHIGRAM-group>`
* :ref:`/NXevent_data_em/IMAGE_SET_EM_SE-group </NXevent_data_em/IMAGE_SET_EM_SE-group>`
* :ref:`/NXevent_data_em/INTERACTION_VOL_EM-group </NXevent_data_em/INTERACTION_VOL_EM-group>`
* :ref:`/NXevent_data_em/PROCESS-group </NXevent_data_em/PROCESS-group>`
* :ref:`/NXevent_data_em/SPECTRUM_SET_EM_AUGER-group </NXevent_data_em/SPECTRUM_SET_EM_AUGER-group>`
* :ref:`/NXevent_data_em/SPECTRUM_SET_EM_CATHODOLUM-group </NXevent_data_em/SPECTRUM_SET_EM_CATHODOLUM-group>`
* :ref:`/NXevent_data_em/SPECTRUM_SET_EM_EELS-group </NXevent_data_em/SPECTRUM_SET_EM_EELS-group>`
* :ref:`/NXevent_data_em/SPECTRUM_SET_EM_XRAY-group </NXevent_data_em/SPECTRUM_SET_EM_XRAY-group>`
* :ref:`/NXevent_data_em/start_time-field </NXevent_data_em/start_time-field>`

**NXDL Source**:
  https://github.com/nexusformat/definitions/blob/main/base_classes/NXevent_data_em.nxdl.xml
