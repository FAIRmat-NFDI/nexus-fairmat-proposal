.. auto-generated by dev_tools.docs.nxdl from the NXDL source contributed_definitions/NXapm_paraprobe_results_transcoder.nxdl.xml -- DO NOT EDIT

.. index::
    ! NXapm_paraprobe_results_transcoder (application definition)
    ! apm_paraprobe_results_transcoder (application definition)
    see: apm_paraprobe_results_transcoder (application definition); NXapm_paraprobe_results_transcoder

.. _NXapm_paraprobe_results_transcoder:

==================================
NXapm_paraprobe_results_transcoder
==================================

**Status**:

  application definition, extends :ref:`NXobject`

**Description**:

  Results of a paraprobe-transcoder tool run.

**Symbols**:

  The symbols used in the schema to specify e.g. dimensions of arrays.

  **n_ions**: The total number of ions in the reconstruction.

  **n_ivec_max**: Maximum number of allowed atoms per (molecular) ion (fragment). Needs to match maximum_number_of_atoms_per_molecular_ion.

  **n_ranges**: Number of mass-to-charge-state-ratio intervals mapped on this ion type.

  **n_topology**: Total number of integers in the supplementary XDMF topology array.

**Groups cited**:
  :ref:`NXcoordinate_system_set`, :ref:`NXcs_computer`, :ref:`NXcs_cpu`, :ref:`NXcs_gpu`, :ref:`NXcs_io_obj`, :ref:`NXcs_io_sys`, :ref:`NXcs_mm_sys`, :ref:`NXcs_profiling_event`, :ref:`NXcs_profiling`, :ref:`NXentry`, :ref:`NXfabrication`, :ref:`NXinstrument`, :ref:`NXion`, :ref:`NXprocess`, :ref:`NXtransformations`, :ref:`NXuser`

.. index:: NXentry (base class); used in application definition, NXuser (base class); used in application definition, NXcoordinate_system_set (base class); used in application definition, NXtransformations (base class); used in application definition, NXprocess (base class); used in application definition, NXinstrument (base class); used in application definition, NXion (base class); used in application definition, NXcs_profiling (base class); used in application definition, NXcs_computer (base class); used in application definition, NXcs_cpu (base class); used in application definition, NXfabrication (base class); used in application definition, NXcs_gpu (base class); used in application definition, NXcs_mm_sys (base class); used in application definition, NXcs_io_sys (base class); used in application definition, NXcs_io_obj (base class); used in application definition, NXcs_profiling_event (base class); used in application definition

**Structure**:

  .. _/NXapm_paraprobe_results_transcoder/ENTRY-group:

  **ENTRY**: (required) :ref:`NXentry`


    .. _/NXapm_paraprobe_results_transcoder/ENTRY@version-attribute:

    .. index:: version (group attribute)

    **@version**: (required) :ref:`NX_CHAR <NX_CHAR>`

      Version specifier of this application definition.

    .. _/NXapm_paraprobe_results_transcoder/ENTRY/definition-field:

    .. index:: definition (field)

    **definition**: (required) :ref:`NX_CHAR <NX_CHAR>`

      Official NeXus NXDL schema with which this file was written.

      Obligatory value: ``NXapm_paraprobe_results_transcoder``

    .. _/NXapm_paraprobe_results_transcoder/ENTRY/program-field:

    .. index:: program (field)

    **program**: (required) :ref:`NX_CHAR <NX_CHAR>`

      Given name of the program/software/tool with which this NeXus
      (configuration) file was generated.

      .. _/NXapm_paraprobe_results_transcoder/ENTRY/program@version-attribute:

      .. index:: version (field attribute)

      **@version**: (required) :ref:`NX_CHAR <NX_CHAR>`

        Ideally program version plus build number, or commit hash or description
        of ever persistent resources where the source code of the program and
        build instructions can be found so that the program can be configured
        ideally in such a manner that the result of this computational process
        is recreatable in the same deterministic manner.

    .. _/NXapm_paraprobe_results_transcoder/ENTRY/analysis_identifier-field:

    .. index:: analysis_identifier (field)

    **analysis_identifier**: (optional) :ref:`NX_CHAR <NX_CHAR>`

      Ideally, a (globally persistent) unique identifier for referring
      to this analysis.

    .. _/NXapm_paraprobe_results_transcoder/ENTRY/analysis_description-field:

    .. index:: analysis_description (field)

    **analysis_description**: (optional) :ref:`NX_CHAR <NX_CHAR>`

      Possibility for leaving a free-text description about this analysis.

    .. _/NXapm_paraprobe_results_transcoder/ENTRY/start_time-field:

    .. index:: start_time (field)

    **start_time**: (required) :ref:`NX_DATE_TIME <NX_DATE_TIME>`

      ISO 8601 formatted time code with local time zone offset to UTC
      information included when the analysis behind this results file
      was started, i.e. the paraprobe-tool executable started as a process.

    .. _/NXapm_paraprobe_results_transcoder/ENTRY/end_time-field:

    .. index:: end_time (field)

    **end_time**: (required) :ref:`NX_DATE_TIME <NX_DATE_TIME>`

      ISO 8601 formatted time code with local time zone offset to UTC
      information included when the analysis behind this results file
      were completed and the paraprobe-tool executable exited as a process.

    .. _/NXapm_paraprobe_results_transcoder/ENTRY/config_filename-field:

    .. index:: config_filename (field)

    **config_filename**: (required) :ref:`NX_CHAR <NX_CHAR>`

      The absolute path and name of the config file for this analysis.

      .. _/NXapm_paraprobe_results_transcoder/ENTRY/config_filename@version-attribute:

      .. index:: version (field attribute)

      **@version**: (required) :ref:`NX_CHAR <NX_CHAR>`

        At least SHA256 strong hash of the specific config_file for
        tracking provenance.

    .. _/NXapm_paraprobe_results_transcoder/ENTRY/results_path-field:

    .. index:: results_path (field)

    **results_path**: (optional) :ref:`NX_CHAR <NX_CHAR>`

      Path to the directory where the tool should store NeXus/HDF5 results
      of this analysis. If not specified results will be stored in the
      current working directory.

    .. _/NXapm_paraprobe_results_transcoder/ENTRY/status-field:

    .. index:: status (field)

    **status**: (required) :ref:`NX_CHAR <NX_CHAR>`

      A statement whether the paraprobe-tool executable managed to
      process the analysis or failed prematurely.

      This status is written to the results file after the end_time
      at which point the executable must not compute any analysis.
      Only when this status message is present and shows `success`, the
      user should consider the results. In all other cases it might be
      that the executable has terminated prematurely or another error
      occurred.

      Any of these values: ``success`` | ``failure``

    .. _/NXapm_paraprobe_results_transcoder/ENTRY/USER-group:

    **USER**: (recommended) :ref:`NXuser`

      If used, contact information and eventually details
      of at least the person who performed this analysis.

      .. _/NXapm_paraprobe_results_transcoder/ENTRY/USER/name-field:

      .. index:: name (field)

      **name**: (required) :ref:`NX_CHAR <NX_CHAR>`


      .. _/NXapm_paraprobe_results_transcoder/ENTRY/USER/affiliation-field:

      .. index:: affiliation (field)

      **affiliation**: (recommended) :ref:`NX_CHAR <NX_CHAR>`


      .. _/NXapm_paraprobe_results_transcoder/ENTRY/USER/address-field:

      .. index:: address (field)

      **address**: (optional) :ref:`NX_CHAR <NX_CHAR>`


      .. _/NXapm_paraprobe_results_transcoder/ENTRY/USER/email-field:

      .. index:: email (field)

      **email**: (recommended) :ref:`NX_CHAR <NX_CHAR>`


      .. _/NXapm_paraprobe_results_transcoder/ENTRY/USER/orcid-field:

      .. index:: orcid (field)

      **orcid**: (recommended) :ref:`NX_CHAR <NX_CHAR>`


      .. _/NXapm_paraprobe_results_transcoder/ENTRY/USER/orcid_platform-field:

      .. index:: orcid_platform (field)

      **orcid_platform**: (recommended) :ref:`NX_CHAR <NX_CHAR>`


      .. _/NXapm_paraprobe_results_transcoder/ENTRY/USER/telephone_number-field:

      .. index:: telephone_number (field)

      **telephone_number**: (optional) :ref:`NX_CHAR <NX_CHAR>`


      .. _/NXapm_paraprobe_results_transcoder/ENTRY/USER/role-field:

      .. index:: role (field)

      **role**: (recommended) :ref:`NX_CHAR <NX_CHAR>`


      .. _/NXapm_paraprobe_results_transcoder/ENTRY/USER/social_media_name-field:

      .. index:: social_media_name (field)

      **social_media_name**: (optional) :ref:`NX_CHAR <NX_CHAR>`


      .. _/NXapm_paraprobe_results_transcoder/ENTRY/USER/social_media_platform-field:

      .. index:: social_media_platform (field)

      **social_media_platform**: (optional) :ref:`NX_CHAR <NX_CHAR>`


    .. _/NXapm_paraprobe_results_transcoder/ENTRY/COORDINATE_SYSTEM_SET-group:

    **COORDINATE_SYSTEM_SET**: (required) :ref:`NXcoordinate_system_set`

      Details about the coordinate system conventions used.

      .. _/NXapm_paraprobe_results_transcoder/ENTRY/COORDINATE_SYSTEM_SET/TRANSFORMATIONS-group:

      **TRANSFORMATIONS**: (required) :ref:`NXtransformations`

        The individual coordinate systems which should be used.
        Field names should be prefixed with the following controlled terms
        indicating which individual coordinate system is described:

        * paraprobe
        * lab
        * specimen
        * laser
        * leap
        * detector
        * recon

    .. _/NXapm_paraprobe_results_transcoder/ENTRY/visualization-group:

    **visualization**: (recommended) :ref:`NXprocess`


      .. _/NXapm_paraprobe_results_transcoder/ENTRY/visualization/xdmf_topology-field:

      .. index:: xdmf_topology (field)

      **xdmf_topology**: (required) :ref:`NX_UINT <NX_UINT>` (Rank: 1, Dimensions: [n_topology]) {units=\ :ref:`NX_UNITLESS <NX_UNITLESS>`}

        An array of triplets of integers which can serve as a supplementary
        array for Paraview to display the reconstruction. The XDMF datatype
        is here 1, the number of primitives 1 per triplet, the last integer
        in each triplet is the identifier of each point starting from zero.

    .. _/NXapm_paraprobe_results_transcoder/ENTRY/atom_probe-group:

    **atom_probe**: (required) :ref:`NXinstrument`

      On a mid term perspective we would like to evolve the paraprobe-toolbox
      to an implementation stage where it works exclusively with completely
      provenance-tracked formats for both the configuration of the workflow step
      and/or analysis with each tool and also for the output of these analyses
      in the form of so-called tool-specific results files.
      Currently the Hierarchical Data Format 5 (HDF5) is used to store such data.

      Different file formats can be used to inject reconstructed datasets and
      ranging definitions into the toolbox. Traditionally, these are the POS, 
      ePOS, and APT files with the tomographic reconstruction and other metadata
      and RNG and RRNG file formats for the ranging definitions how mass-to-charge
      state-ratio values map on (molecular) ion types. Such input should be
      injected via specific NeXus/HDF5 files which are documented
      in compliance with the NXapm application definition.

      So far the paraprobe-toolbox was used as a standalone tool. Therefore, it
      was not relevant during the development to focus on interoperability.
      Essentially paraprobe-transcoder was used as a parser to transcode data
      in the above-mentioned file formats into a paraprobe-specific
      representation. This transcoding should become deprecated.
      Here we describe steps we have taken into this direction.

      With the work in the FAIRmat project and the desire to make the paraprobe-
      toolbox also accessible as a cloud-computing capable service in the Nomad
      Remote Tools Hub (NORTH) the topic of interoperability became more important
      and eventually the NXapm application definition was proposed.
      NORTH is a GUI and related service in a NOMAD OASIS instance which allows
      to spawn preconfigured docker containers via JupyterHub.
      Currently, NORTH includes the so-called apm container. A container with
      tools specific for analyzing data from atom probe microscopy as well as
      processing of point cloud and mesh data.

      The NXapm application definition and related implementation work within
      NOMAD OASIS enabled users to parse content of POS, ePOS, APT, RNG, and
      RRNG files, surplus key metadata from vendor-agnostic electronic lab notebook
      solutions directly into NOMAD OASIS via the uploads section.
      The process is automated and yields an NXapm-compliant NeXus/HDF5 file
      inside the uploads section in return.

      With these improvements made there is no longer a need for - at least the
      users of a NOMAD OASIS and NORTH instance to use the deprecated 
      PARAPROBE.Transcoder.Results.*.h5 files. Ideally, paraprobe should
      automatically detect that the input can now be an NXapm-compliant NeXus/HDF5
      file and in response work with this file directly.
      To remain compliant with users however who do not have or do not wish
      to use a NOMAD OASIS or NXapm or NeXus at all right now, the solution is
      as follows:

      Calling the configuration stage of paraprobe-transcoder is always mandatory.
      It is always the first step of working with the toolbox. In this process
      the user defines the input files. These can either be nxs i.e. the NXapm/NeXus/
      HDF5 file from e.g. the upload section, or such a file that was obtained from
      a colleague with a NOMAD OASIS instance.
      In all other cases, users can pass the reconstruction and ranging definitions
      using the traditional POS, ePOS, or APT and RNG or RRNG file formats respectively.

      Based on which input the user delivers, the parmsetup-transcoder tool then
      creates a configuration file PARAPROBE.Transcoder.Config.SimID.*.nxs and
      informs the user whether the input was NeXus (and thus if all relevant
      input is already available) or whether the paraprobe-transcoder tool needs
      to be executed to convert the content of the vendor files first into a
      format which paraprobe can provenance track and understand.
      In the latter case, the PARAPROBE.Transcoder.Config.SimID.*.nxs file is
      used to communicate to all subsequently used tools from which files
      the tools can expect to find the reconstruction and ranging definitions.

      All subsequent analysis steps start also with a tool-specific configuration.
      This configuration step reads in (among others) the
      PARAPROBE.Transcoder.Config.SimID.*.nxs file from which the configuration
      tool identifies automatically whether to read the reconstruction and ranging data
      from PARAPROBE.Transcoder.Results.SimID.*.h5 or directly the NXapm-compliant
      NeXus/HDF5 file that was created upon preparing the upload or the file shared
      from a colleague. This design removes the need for unnecessary copies of the data.
      Currently still though users should execute the transcoder step as it will
      generate a supplementary XDMF topology field with which the data in either
      the NeXus/HDF5 or the transcoded vendor files can be displayed using e.g.
      Paraview. For this purpose XDMF is used.

      Of course ideally the APT community would at some point converge to use
      a common data exchange file format. To this end, AMETEK/Cameca's APT file format
      could be a good starting point but so far it is lacking a consistent way of
      how to store generalized ranging definitions and post-processing results.
      POS, ePOS, Rouen's ATO, as well as other so far used representations of data
      like CSV or text files have, to the best of our current knowledge, no
      concept of how to marry reconstruction and (optional) ranging data into
      one self-descriptive format.

      This summarizes the rationale behind the current choices of the I/O for
      paraprobe. Furthermore, this summarizes also why the fundamental design
      of splitting an analysis always into steps of configuration (with parmsetup),
      task execution (with the respective C/C++ or Python tool of the toolbox),
      and post-processing (e.g. with autoreporter) is useful because it offers
      a clear description of provenance tracking. This is a necessary step to make
      atom probe microscopy data at all better aligned with the aims of the
      FAIR principles.

      The internal organization of the data entries in the atom_probe group
      in this application definition for paraprobe-transcoder results files
      mirror the definitions of the NXapm for consistency reasons.

      .. _/NXapm_paraprobe_results_transcoder/ENTRY/atom_probe/mass_to_charge_conversion-group:

      **mass_to_charge_conversion**: (required) :ref:`NXprocess`


        .. _/NXapm_paraprobe_results_transcoder/ENTRY/atom_probe/mass_to_charge_conversion/mass_to_charge-field:

        .. index:: mass_to_charge (field)

        **mass_to_charge**: (required) :ref:`NX_FLOAT <NX_FLOAT>` (Rank: 1, Dimensions: [n_ions]) {units=\ :ref:`NX_ANY <NX_ANY>`}

          Mass-to-charge-state ratio values.

      .. _/NXapm_paraprobe_results_transcoder/ENTRY/atom_probe/reconstruction-group:

      **reconstruction**: (required) :ref:`NXprocess`


        .. _/NXapm_paraprobe_results_transcoder/ENTRY/atom_probe/reconstruction/reconstructed_positions-field:

        .. index:: reconstructed_positions (field)

        **reconstructed_positions**: (required) :ref:`NX_FLOAT <NX_FLOAT>` (Rank: 2, Dimensions: [n_ions, 3]) {units=\ :ref:`NX_LENGTH <NX_LENGTH>`}

          Three-dimensional reconstructed positions of the ions.
          Interleaved array of x, y, z positions in the specimen space.

      .. _/NXapm_paraprobe_results_transcoder/ENTRY/atom_probe/ranging-group:

      **ranging**: (required) :ref:`NXprocess`


        .. _/NXapm_paraprobe_results_transcoder/ENTRY/atom_probe/ranging/peak_identification-group:

        **peak_identification**: (required) :ref:`NXprocess`

          Details about how peaks, with taking into account
          error models, were interpreted as ion types or not.

          .. _/NXapm_paraprobe_results_transcoder/ENTRY/atom_probe/ranging/peak_identification/ION-group:

          **ION**: (required) :ref:`NXion`


            .. _/NXapm_paraprobe_results_transcoder/ENTRY/atom_probe/ranging/peak_identification/ION/isotope_vector-field:

            .. index:: isotope_vector (field)

            **isotope_vector**: (required) :ref:`NX_UINT <NX_UINT>`


            .. _/NXapm_paraprobe_results_transcoder/ENTRY/atom_probe/ranging/peak_identification/ION/nuclid_list-field:

            .. index:: nuclid_list (field)

            **nuclid_list**: (recommended) :ref:`NX_UINT <NX_UINT>`


            .. _/NXapm_paraprobe_results_transcoder/ENTRY/atom_probe/ranging/peak_identification/ION/charge_state-field:

            .. index:: charge_state (field)

            **charge_state**: (required) :ref:`NX_INT <NX_INT>`


            .. _/NXapm_paraprobe_results_transcoder/ENTRY/atom_probe/ranging/peak_identification/ION/mass_to_charge_range-field:

            .. index:: mass_to_charge_range (field)

            **mass_to_charge_range**: (required) :ref:`NX_FLOAT <NX_FLOAT>`


    .. _/NXapm_paraprobe_results_transcoder/ENTRY/performance-group:

    **performance**: (required) :ref:`NXcs_profiling`


      .. _/NXapm_paraprobe_results_transcoder/ENTRY/performance/current_working_directory-field:

      .. index:: current_working_directory (field)

      **current_working_directory**: (required) :ref:`NX_CHAR <NX_CHAR>`


      .. _/NXapm_paraprobe_results_transcoder/ENTRY/performance/command_line_call-field:

      .. index:: command_line_call (field)

      **command_line_call**: (optional) :ref:`NX_CHAR <NX_CHAR>`


      .. _/NXapm_paraprobe_results_transcoder/ENTRY/performance/start_time-field:

      .. index:: start_time (field)

      **start_time**: (recommended) :ref:`NX_DATE_TIME <NX_DATE_TIME>`


      .. _/NXapm_paraprobe_results_transcoder/ENTRY/performance/end_time-field:

      .. index:: end_time (field)

      **end_time**: (recommended) :ref:`NX_DATE_TIME <NX_DATE_TIME>`


      .. _/NXapm_paraprobe_results_transcoder/ENTRY/performance/total_elapsed_time-field:

      .. index:: total_elapsed_time (field)

      **total_elapsed_time**: (required) :ref:`NX_NUMBER <NX_NUMBER>`


      .. _/NXapm_paraprobe_results_transcoder/ENTRY/performance/number_of_processes-field:

      .. index:: number_of_processes (field)

      **number_of_processes**: (required) :ref:`NX_POSINT <NX_POSINT>`


      .. _/NXapm_paraprobe_results_transcoder/ENTRY/performance/number_of_threads-field:

      .. index:: number_of_threads (field)

      **number_of_threads**: (required) :ref:`NX_POSINT <NX_POSINT>`


      .. _/NXapm_paraprobe_results_transcoder/ENTRY/performance/number_of_gpus-field:

      .. index:: number_of_gpus (field)

      **number_of_gpus**: (required) :ref:`NX_POSINT <NX_POSINT>`


      .. _/NXapm_paraprobe_results_transcoder/ENTRY/performance/CS_COMPUTER-group:

      **CS_COMPUTER**: (recommended) :ref:`NXcs_computer`


        .. _/NXapm_paraprobe_results_transcoder/ENTRY/performance/CS_COMPUTER/name-field:

        .. index:: name (field)

        **name**: (recommended) :ref:`NX_CHAR <NX_CHAR>`


        .. _/NXapm_paraprobe_results_transcoder/ENTRY/performance/CS_COMPUTER/operating_system-field:

        .. index:: operating_system (field)

        **operating_system**: (required) :ref:`NX_CHAR <NX_CHAR>`


          .. _/NXapm_paraprobe_results_transcoder/ENTRY/performance/CS_COMPUTER/operating_system@version-attribute:

          .. index:: version (field attribute)

          **@version**: (required) :ref:`NX_CHAR <NX_CHAR>`


        .. _/NXapm_paraprobe_results_transcoder/ENTRY/performance/CS_COMPUTER/uuid-field:

        .. index:: uuid (field)

        **uuid**: (optional) :ref:`NX_CHAR <NX_CHAR>`


        .. _/NXapm_paraprobe_results_transcoder/ENTRY/performance/CS_COMPUTER/CS_CPU-group:

        **CS_CPU**: (optional) :ref:`NXcs_cpu`


          .. _/NXapm_paraprobe_results_transcoder/ENTRY/performance/CS_COMPUTER/CS_CPU/name-field:

          .. index:: name (field)

          **name**: (optional) :ref:`NX_CHAR <NX_CHAR>`


          .. _/NXapm_paraprobe_results_transcoder/ENTRY/performance/CS_COMPUTER/CS_CPU/FABRICATION-group:

          **FABRICATION**: (recommended) :ref:`NXfabrication`


            .. _/NXapm_paraprobe_results_transcoder/ENTRY/performance/CS_COMPUTER/CS_CPU/FABRICATION/identifier-field:

            .. index:: identifier (field)

            **identifier**: (optional) :ref:`NX_CHAR <NX_CHAR>`


            .. _/NXapm_paraprobe_results_transcoder/ENTRY/performance/CS_COMPUTER/CS_CPU/FABRICATION/capabilities-field:

            .. index:: capabilities (field)

            **capabilities**: (optional) :ref:`NX_CHAR <NX_CHAR>`


        .. _/NXapm_paraprobe_results_transcoder/ENTRY/performance/CS_COMPUTER/CS_GPU-group:

        **CS_GPU**: (optional) :ref:`NXcs_gpu`


          .. _/NXapm_paraprobe_results_transcoder/ENTRY/performance/CS_COMPUTER/CS_GPU/name-field:

          .. index:: name (field)

          **name**: (optional) :ref:`NX_CHAR <NX_CHAR>`


          .. _/NXapm_paraprobe_results_transcoder/ENTRY/performance/CS_COMPUTER/CS_GPU/FABRICATION-group:

          **FABRICATION**: (recommended) :ref:`NXfabrication`


            .. _/NXapm_paraprobe_results_transcoder/ENTRY/performance/CS_COMPUTER/CS_GPU/FABRICATION/identifier-field:

            .. index:: identifier (field)

            **identifier**: (optional) :ref:`NX_CHAR <NX_CHAR>`


            .. _/NXapm_paraprobe_results_transcoder/ENTRY/performance/CS_COMPUTER/CS_GPU/FABRICATION/capabilities-field:

            .. index:: capabilities (field)

            **capabilities**: (optional) :ref:`NX_CHAR <NX_CHAR>`


        .. _/NXapm_paraprobe_results_transcoder/ENTRY/performance/CS_COMPUTER/CS_MM_SYS-group:

        **CS_MM_SYS**: (optional) :ref:`NXcs_mm_sys`


          .. _/NXapm_paraprobe_results_transcoder/ENTRY/performance/CS_COMPUTER/CS_MM_SYS/total_physical_memory-field:

          .. index:: total_physical_memory (field)

          **total_physical_memory**: (required) :ref:`NX_NUMBER <NX_NUMBER>`


        .. _/NXapm_paraprobe_results_transcoder/ENTRY/performance/CS_COMPUTER/CS_IO_SYS-group:

        **CS_IO_SYS**: (optional) :ref:`NXcs_io_sys`


          .. _/NXapm_paraprobe_results_transcoder/ENTRY/performance/CS_COMPUTER/CS_IO_SYS/CS_IO_OBJ-group:

          **CS_IO_OBJ**: (required) :ref:`NXcs_io_obj`


            .. _/NXapm_paraprobe_results_transcoder/ENTRY/performance/CS_COMPUTER/CS_IO_SYS/CS_IO_OBJ/technology-field:

            .. index:: technology (field)

            **technology**: (required) :ref:`NX_CHAR <NX_CHAR>`


            .. _/NXapm_paraprobe_results_transcoder/ENTRY/performance/CS_COMPUTER/CS_IO_SYS/CS_IO_OBJ/max_physical_capacity-field:

            .. index:: max_physical_capacity (field)

            **max_physical_capacity**: (required) :ref:`NX_NUMBER <NX_NUMBER>`


            .. _/NXapm_paraprobe_results_transcoder/ENTRY/performance/CS_COMPUTER/CS_IO_SYS/CS_IO_OBJ/name-field:

            .. index:: name (field)

            **name**: (optional) :ref:`NX_CHAR <NX_CHAR>`


            .. _/NXapm_paraprobe_results_transcoder/ENTRY/performance/CS_COMPUTER/CS_IO_SYS/CS_IO_OBJ/FABRICATION-group:

            **FABRICATION**: (recommended) :ref:`NXfabrication`


              .. _/NXapm_paraprobe_results_transcoder/ENTRY/performance/CS_COMPUTER/CS_IO_SYS/CS_IO_OBJ/FABRICATION/identifier-field:

              .. index:: identifier (field)

              **identifier**: (optional) :ref:`NX_CHAR <NX_CHAR>`


              .. _/NXapm_paraprobe_results_transcoder/ENTRY/performance/CS_COMPUTER/CS_IO_SYS/CS_IO_OBJ/FABRICATION/capabilities-field:

              .. index:: capabilities (field)

              **capabilities**: (optional) :ref:`NX_CHAR <NX_CHAR>`


        .. _/NXapm_paraprobe_results_transcoder/ENTRY/performance/CS_COMPUTER/CS_PROFILING_EVENT-group:

        **CS_PROFILING_EVENT**: (required) :ref:`NXcs_profiling_event`


          .. _/NXapm_paraprobe_results_transcoder/ENTRY/performance/CS_COMPUTER/CS_PROFILING_EVENT/start_time-field:

          .. index:: start_time (field)

          **start_time**: (optional) :ref:`NX_DATE_TIME <NX_DATE_TIME>`


          .. _/NXapm_paraprobe_results_transcoder/ENTRY/performance/CS_COMPUTER/CS_PROFILING_EVENT/end_time-field:

          .. index:: end_time (field)

          **end_time**: (optional) :ref:`NX_DATE_TIME <NX_DATE_TIME>`


          .. _/NXapm_paraprobe_results_transcoder/ENTRY/performance/CS_COMPUTER/CS_PROFILING_EVENT/description-field:

          .. index:: description (field)

          **description**: (required) :ref:`NX_CHAR <NX_CHAR>`


          .. _/NXapm_paraprobe_results_transcoder/ENTRY/performance/CS_COMPUTER/CS_PROFILING_EVENT/elapsed_time-field:

          .. index:: elapsed_time (field)

          **elapsed_time**: (required) :ref:`NX_NUMBER <NX_NUMBER>`


          .. _/NXapm_paraprobe_results_transcoder/ENTRY/performance/CS_COMPUTER/CS_PROFILING_EVENT/number_of_processes-field:

          .. index:: number_of_processes (field)

          **number_of_processes**: (required) :ref:`NX_POSINT <NX_POSINT>`

            Specify if it was different from the number_of_processes
            in the NXcs_profiling super class.

          .. _/NXapm_paraprobe_results_transcoder/ENTRY/performance/CS_COMPUTER/CS_PROFILING_EVENT/number_of_threads-field:

          .. index:: number_of_threads (field)

          **number_of_threads**: (required) :ref:`NX_POSINT <NX_POSINT>`

            Specify if it was different from the number_of_threads
            in the NXcs_profiling super class.

          .. _/NXapm_paraprobe_results_transcoder/ENTRY/performance/CS_COMPUTER/CS_PROFILING_EVENT/number_of_gpus-field:

          .. index:: number_of_gpus (field)

          **number_of_gpus**: (required) :ref:`NX_POSINT <NX_POSINT>`

            Specify if it was different from the number_of_threads
            in the NXcs_profiling super class.

          .. _/NXapm_paraprobe_results_transcoder/ENTRY/performance/CS_COMPUTER/CS_PROFILING_EVENT/max_virtual_memory_snapshot-field:

          .. index:: max_virtual_memory_snapshot (field)

          **max_virtual_memory_snapshot**: (recommended) :ref:`NX_NUMBER <NX_NUMBER>`


          .. _/NXapm_paraprobe_results_transcoder/ENTRY/performance/CS_COMPUTER/CS_PROFILING_EVENT/max_resident_memory_snapshot-field:

          .. index:: max_resident_memory_snapshot (field)

          **max_resident_memory_snapshot**: (recommended) :ref:`NX_NUMBER <NX_NUMBER>`



Hypertext Anchors
-----------------

List of hypertext anchors for all groups, fields,
attributes, and links defined in this class.


* :ref:`/NXapm_paraprobe_results_transcoder/ENTRY-group </NXapm_paraprobe_results_transcoder/ENTRY-group>`
* :ref:`/NXapm_paraprobe_results_transcoder/ENTRY/analysis_description-field </NXapm_paraprobe_results_transcoder/ENTRY/analysis_description-field>`
* :ref:`/NXapm_paraprobe_results_transcoder/ENTRY/analysis_identifier-field </NXapm_paraprobe_results_transcoder/ENTRY/analysis_identifier-field>`
* :ref:`/NXapm_paraprobe_results_transcoder/ENTRY/atom_probe-group </NXapm_paraprobe_results_transcoder/ENTRY/atom_probe-group>`
* :ref:`/NXapm_paraprobe_results_transcoder/ENTRY/atom_probe/mass_to_charge_conversion-group </NXapm_paraprobe_results_transcoder/ENTRY/atom_probe/mass_to_charge_conversion-group>`
* :ref:`/NXapm_paraprobe_results_transcoder/ENTRY/atom_probe/mass_to_charge_conversion/mass_to_charge-field </NXapm_paraprobe_results_transcoder/ENTRY/atom_probe/mass_to_charge_conversion/mass_to_charge-field>`
* :ref:`/NXapm_paraprobe_results_transcoder/ENTRY/atom_probe/ranging-group </NXapm_paraprobe_results_transcoder/ENTRY/atom_probe/ranging-group>`
* :ref:`/NXapm_paraprobe_results_transcoder/ENTRY/atom_probe/ranging/peak_identification-group </NXapm_paraprobe_results_transcoder/ENTRY/atom_probe/ranging/peak_identification-group>`
* :ref:`/NXapm_paraprobe_results_transcoder/ENTRY/atom_probe/ranging/peak_identification/ION-group </NXapm_paraprobe_results_transcoder/ENTRY/atom_probe/ranging/peak_identification/ION-group>`
* :ref:`/NXapm_paraprobe_results_transcoder/ENTRY/atom_probe/ranging/peak_identification/ION/charge_state-field </NXapm_paraprobe_results_transcoder/ENTRY/atom_probe/ranging/peak_identification/ION/charge_state-field>`
* :ref:`/NXapm_paraprobe_results_transcoder/ENTRY/atom_probe/ranging/peak_identification/ION/isotope_vector-field </NXapm_paraprobe_results_transcoder/ENTRY/atom_probe/ranging/peak_identification/ION/isotope_vector-field>`
* :ref:`/NXapm_paraprobe_results_transcoder/ENTRY/atom_probe/ranging/peak_identification/ION/mass_to_charge_range-field </NXapm_paraprobe_results_transcoder/ENTRY/atom_probe/ranging/peak_identification/ION/mass_to_charge_range-field>`
* :ref:`/NXapm_paraprobe_results_transcoder/ENTRY/atom_probe/ranging/peak_identification/ION/nuclid_list-field </NXapm_paraprobe_results_transcoder/ENTRY/atom_probe/ranging/peak_identification/ION/nuclid_list-field>`
* :ref:`/NXapm_paraprobe_results_transcoder/ENTRY/atom_probe/reconstruction-group </NXapm_paraprobe_results_transcoder/ENTRY/atom_probe/reconstruction-group>`
* :ref:`/NXapm_paraprobe_results_transcoder/ENTRY/atom_probe/reconstruction/reconstructed_positions-field </NXapm_paraprobe_results_transcoder/ENTRY/atom_probe/reconstruction/reconstructed_positions-field>`
* :ref:`/NXapm_paraprobe_results_transcoder/ENTRY/config_filename-field </NXapm_paraprobe_results_transcoder/ENTRY/config_filename-field>`
* :ref:`/NXapm_paraprobe_results_transcoder/ENTRY/config_filename@version-attribute </NXapm_paraprobe_results_transcoder/ENTRY/config_filename@version-attribute>`
* :ref:`/NXapm_paraprobe_results_transcoder/ENTRY/COORDINATE_SYSTEM_SET-group </NXapm_paraprobe_results_transcoder/ENTRY/COORDINATE_SYSTEM_SET-group>`
* :ref:`/NXapm_paraprobe_results_transcoder/ENTRY/COORDINATE_SYSTEM_SET/TRANSFORMATIONS-group </NXapm_paraprobe_results_transcoder/ENTRY/COORDINATE_SYSTEM_SET/TRANSFORMATIONS-group>`
* :ref:`/NXapm_paraprobe_results_transcoder/ENTRY/definition-field </NXapm_paraprobe_results_transcoder/ENTRY/definition-field>`
* :ref:`/NXapm_paraprobe_results_transcoder/ENTRY/end_time-field </NXapm_paraprobe_results_transcoder/ENTRY/end_time-field>`
* :ref:`/NXapm_paraprobe_results_transcoder/ENTRY/performance-group </NXapm_paraprobe_results_transcoder/ENTRY/performance-group>`
* :ref:`/NXapm_paraprobe_results_transcoder/ENTRY/performance/command_line_call-field </NXapm_paraprobe_results_transcoder/ENTRY/performance/command_line_call-field>`
* :ref:`/NXapm_paraprobe_results_transcoder/ENTRY/performance/CS_COMPUTER-group </NXapm_paraprobe_results_transcoder/ENTRY/performance/CS_COMPUTER-group>`
* :ref:`/NXapm_paraprobe_results_transcoder/ENTRY/performance/CS_COMPUTER/CS_CPU-group </NXapm_paraprobe_results_transcoder/ENTRY/performance/CS_COMPUTER/CS_CPU-group>`
* :ref:`/NXapm_paraprobe_results_transcoder/ENTRY/performance/CS_COMPUTER/CS_CPU/FABRICATION-group </NXapm_paraprobe_results_transcoder/ENTRY/performance/CS_COMPUTER/CS_CPU/FABRICATION-group>`
* :ref:`/NXapm_paraprobe_results_transcoder/ENTRY/performance/CS_COMPUTER/CS_CPU/FABRICATION/capabilities-field </NXapm_paraprobe_results_transcoder/ENTRY/performance/CS_COMPUTER/CS_CPU/FABRICATION/capabilities-field>`
* :ref:`/NXapm_paraprobe_results_transcoder/ENTRY/performance/CS_COMPUTER/CS_CPU/FABRICATION/identifier-field </NXapm_paraprobe_results_transcoder/ENTRY/performance/CS_COMPUTER/CS_CPU/FABRICATION/identifier-field>`
* :ref:`/NXapm_paraprobe_results_transcoder/ENTRY/performance/CS_COMPUTER/CS_CPU/name-field </NXapm_paraprobe_results_transcoder/ENTRY/performance/CS_COMPUTER/CS_CPU/name-field>`
* :ref:`/NXapm_paraprobe_results_transcoder/ENTRY/performance/CS_COMPUTER/CS_GPU-group </NXapm_paraprobe_results_transcoder/ENTRY/performance/CS_COMPUTER/CS_GPU-group>`
* :ref:`/NXapm_paraprobe_results_transcoder/ENTRY/performance/CS_COMPUTER/CS_GPU/FABRICATION-group </NXapm_paraprobe_results_transcoder/ENTRY/performance/CS_COMPUTER/CS_GPU/FABRICATION-group>`
* :ref:`/NXapm_paraprobe_results_transcoder/ENTRY/performance/CS_COMPUTER/CS_GPU/FABRICATION/capabilities-field </NXapm_paraprobe_results_transcoder/ENTRY/performance/CS_COMPUTER/CS_GPU/FABRICATION/capabilities-field>`
* :ref:`/NXapm_paraprobe_results_transcoder/ENTRY/performance/CS_COMPUTER/CS_GPU/FABRICATION/identifier-field </NXapm_paraprobe_results_transcoder/ENTRY/performance/CS_COMPUTER/CS_GPU/FABRICATION/identifier-field>`
* :ref:`/NXapm_paraprobe_results_transcoder/ENTRY/performance/CS_COMPUTER/CS_GPU/name-field </NXapm_paraprobe_results_transcoder/ENTRY/performance/CS_COMPUTER/CS_GPU/name-field>`
* :ref:`/NXapm_paraprobe_results_transcoder/ENTRY/performance/CS_COMPUTER/CS_IO_SYS-group </NXapm_paraprobe_results_transcoder/ENTRY/performance/CS_COMPUTER/CS_IO_SYS-group>`
* :ref:`/NXapm_paraprobe_results_transcoder/ENTRY/performance/CS_COMPUTER/CS_IO_SYS/CS_IO_OBJ-group </NXapm_paraprobe_results_transcoder/ENTRY/performance/CS_COMPUTER/CS_IO_SYS/CS_IO_OBJ-group>`
* :ref:`/NXapm_paraprobe_results_transcoder/ENTRY/performance/CS_COMPUTER/CS_IO_SYS/CS_IO_OBJ/FABRICATION-group </NXapm_paraprobe_results_transcoder/ENTRY/performance/CS_COMPUTER/CS_IO_SYS/CS_IO_OBJ/FABRICATION-group>`
* :ref:`/NXapm_paraprobe_results_transcoder/ENTRY/performance/CS_COMPUTER/CS_IO_SYS/CS_IO_OBJ/FABRICATION/capabilities-field </NXapm_paraprobe_results_transcoder/ENTRY/performance/CS_COMPUTER/CS_IO_SYS/CS_IO_OBJ/FABRICATION/capabilities-field>`
* :ref:`/NXapm_paraprobe_results_transcoder/ENTRY/performance/CS_COMPUTER/CS_IO_SYS/CS_IO_OBJ/FABRICATION/identifier-field </NXapm_paraprobe_results_transcoder/ENTRY/performance/CS_COMPUTER/CS_IO_SYS/CS_IO_OBJ/FABRICATION/identifier-field>`
* :ref:`/NXapm_paraprobe_results_transcoder/ENTRY/performance/CS_COMPUTER/CS_IO_SYS/CS_IO_OBJ/max_physical_capacity-field </NXapm_paraprobe_results_transcoder/ENTRY/performance/CS_COMPUTER/CS_IO_SYS/CS_IO_OBJ/max_physical_capacity-field>`
* :ref:`/NXapm_paraprobe_results_transcoder/ENTRY/performance/CS_COMPUTER/CS_IO_SYS/CS_IO_OBJ/name-field </NXapm_paraprobe_results_transcoder/ENTRY/performance/CS_COMPUTER/CS_IO_SYS/CS_IO_OBJ/name-field>`
* :ref:`/NXapm_paraprobe_results_transcoder/ENTRY/performance/CS_COMPUTER/CS_IO_SYS/CS_IO_OBJ/technology-field </NXapm_paraprobe_results_transcoder/ENTRY/performance/CS_COMPUTER/CS_IO_SYS/CS_IO_OBJ/technology-field>`
* :ref:`/NXapm_paraprobe_results_transcoder/ENTRY/performance/CS_COMPUTER/CS_MM_SYS-group </NXapm_paraprobe_results_transcoder/ENTRY/performance/CS_COMPUTER/CS_MM_SYS-group>`
* :ref:`/NXapm_paraprobe_results_transcoder/ENTRY/performance/CS_COMPUTER/CS_MM_SYS/total_physical_memory-field </NXapm_paraprobe_results_transcoder/ENTRY/performance/CS_COMPUTER/CS_MM_SYS/total_physical_memory-field>`
* :ref:`/NXapm_paraprobe_results_transcoder/ENTRY/performance/CS_COMPUTER/CS_PROFILING_EVENT-group </NXapm_paraprobe_results_transcoder/ENTRY/performance/CS_COMPUTER/CS_PROFILING_EVENT-group>`
* :ref:`/NXapm_paraprobe_results_transcoder/ENTRY/performance/CS_COMPUTER/CS_PROFILING_EVENT/description-field </NXapm_paraprobe_results_transcoder/ENTRY/performance/CS_COMPUTER/CS_PROFILING_EVENT/description-field>`
* :ref:`/NXapm_paraprobe_results_transcoder/ENTRY/performance/CS_COMPUTER/CS_PROFILING_EVENT/elapsed_time-field </NXapm_paraprobe_results_transcoder/ENTRY/performance/CS_COMPUTER/CS_PROFILING_EVENT/elapsed_time-field>`
* :ref:`/NXapm_paraprobe_results_transcoder/ENTRY/performance/CS_COMPUTER/CS_PROFILING_EVENT/end_time-field </NXapm_paraprobe_results_transcoder/ENTRY/performance/CS_COMPUTER/CS_PROFILING_EVENT/end_time-field>`
* :ref:`/NXapm_paraprobe_results_transcoder/ENTRY/performance/CS_COMPUTER/CS_PROFILING_EVENT/max_resident_memory_snapshot-field </NXapm_paraprobe_results_transcoder/ENTRY/performance/CS_COMPUTER/CS_PROFILING_EVENT/max_resident_memory_snapshot-field>`
* :ref:`/NXapm_paraprobe_results_transcoder/ENTRY/performance/CS_COMPUTER/CS_PROFILING_EVENT/max_virtual_memory_snapshot-field </NXapm_paraprobe_results_transcoder/ENTRY/performance/CS_COMPUTER/CS_PROFILING_EVENT/max_virtual_memory_snapshot-field>`
* :ref:`/NXapm_paraprobe_results_transcoder/ENTRY/performance/CS_COMPUTER/CS_PROFILING_EVENT/number_of_gpus-field </NXapm_paraprobe_results_transcoder/ENTRY/performance/CS_COMPUTER/CS_PROFILING_EVENT/number_of_gpus-field>`
* :ref:`/NXapm_paraprobe_results_transcoder/ENTRY/performance/CS_COMPUTER/CS_PROFILING_EVENT/number_of_processes-field </NXapm_paraprobe_results_transcoder/ENTRY/performance/CS_COMPUTER/CS_PROFILING_EVENT/number_of_processes-field>`
* :ref:`/NXapm_paraprobe_results_transcoder/ENTRY/performance/CS_COMPUTER/CS_PROFILING_EVENT/number_of_threads-field </NXapm_paraprobe_results_transcoder/ENTRY/performance/CS_COMPUTER/CS_PROFILING_EVENT/number_of_threads-field>`
* :ref:`/NXapm_paraprobe_results_transcoder/ENTRY/performance/CS_COMPUTER/CS_PROFILING_EVENT/start_time-field </NXapm_paraprobe_results_transcoder/ENTRY/performance/CS_COMPUTER/CS_PROFILING_EVENT/start_time-field>`
* :ref:`/NXapm_paraprobe_results_transcoder/ENTRY/performance/CS_COMPUTER/name-field </NXapm_paraprobe_results_transcoder/ENTRY/performance/CS_COMPUTER/name-field>`
* :ref:`/NXapm_paraprobe_results_transcoder/ENTRY/performance/CS_COMPUTER/operating_system-field </NXapm_paraprobe_results_transcoder/ENTRY/performance/CS_COMPUTER/operating_system-field>`
* :ref:`/NXapm_paraprobe_results_transcoder/ENTRY/performance/CS_COMPUTER/operating_system@version-attribute </NXapm_paraprobe_results_transcoder/ENTRY/performance/CS_COMPUTER/operating_system@version-attribute>`
* :ref:`/NXapm_paraprobe_results_transcoder/ENTRY/performance/CS_COMPUTER/uuid-field </NXapm_paraprobe_results_transcoder/ENTRY/performance/CS_COMPUTER/uuid-field>`
* :ref:`/NXapm_paraprobe_results_transcoder/ENTRY/performance/current_working_directory-field </NXapm_paraprobe_results_transcoder/ENTRY/performance/current_working_directory-field>`
* :ref:`/NXapm_paraprobe_results_transcoder/ENTRY/performance/end_time-field </NXapm_paraprobe_results_transcoder/ENTRY/performance/end_time-field>`
* :ref:`/NXapm_paraprobe_results_transcoder/ENTRY/performance/number_of_gpus-field </NXapm_paraprobe_results_transcoder/ENTRY/performance/number_of_gpus-field>`
* :ref:`/NXapm_paraprobe_results_transcoder/ENTRY/performance/number_of_processes-field </NXapm_paraprobe_results_transcoder/ENTRY/performance/number_of_processes-field>`
* :ref:`/NXapm_paraprobe_results_transcoder/ENTRY/performance/number_of_threads-field </NXapm_paraprobe_results_transcoder/ENTRY/performance/number_of_threads-field>`
* :ref:`/NXapm_paraprobe_results_transcoder/ENTRY/performance/start_time-field </NXapm_paraprobe_results_transcoder/ENTRY/performance/start_time-field>`
* :ref:`/NXapm_paraprobe_results_transcoder/ENTRY/performance/total_elapsed_time-field </NXapm_paraprobe_results_transcoder/ENTRY/performance/total_elapsed_time-field>`
* :ref:`/NXapm_paraprobe_results_transcoder/ENTRY/program-field </NXapm_paraprobe_results_transcoder/ENTRY/program-field>`
* :ref:`/NXapm_paraprobe_results_transcoder/ENTRY/program@version-attribute </NXapm_paraprobe_results_transcoder/ENTRY/program@version-attribute>`
* :ref:`/NXapm_paraprobe_results_transcoder/ENTRY/results_path-field </NXapm_paraprobe_results_transcoder/ENTRY/results_path-field>`
* :ref:`/NXapm_paraprobe_results_transcoder/ENTRY/start_time-field </NXapm_paraprobe_results_transcoder/ENTRY/start_time-field>`
* :ref:`/NXapm_paraprobe_results_transcoder/ENTRY/status-field </NXapm_paraprobe_results_transcoder/ENTRY/status-field>`
* :ref:`/NXapm_paraprobe_results_transcoder/ENTRY/USER-group </NXapm_paraprobe_results_transcoder/ENTRY/USER-group>`
* :ref:`/NXapm_paraprobe_results_transcoder/ENTRY/USER/address-field </NXapm_paraprobe_results_transcoder/ENTRY/USER/address-field>`
* :ref:`/NXapm_paraprobe_results_transcoder/ENTRY/USER/affiliation-field </NXapm_paraprobe_results_transcoder/ENTRY/USER/affiliation-field>`
* :ref:`/NXapm_paraprobe_results_transcoder/ENTRY/USER/email-field </NXapm_paraprobe_results_transcoder/ENTRY/USER/email-field>`
* :ref:`/NXapm_paraprobe_results_transcoder/ENTRY/USER/name-field </NXapm_paraprobe_results_transcoder/ENTRY/USER/name-field>`
* :ref:`/NXapm_paraprobe_results_transcoder/ENTRY/USER/orcid-field </NXapm_paraprobe_results_transcoder/ENTRY/USER/orcid-field>`
* :ref:`/NXapm_paraprobe_results_transcoder/ENTRY/USER/orcid_platform-field </NXapm_paraprobe_results_transcoder/ENTRY/USER/orcid_platform-field>`
* :ref:`/NXapm_paraprobe_results_transcoder/ENTRY/USER/role-field </NXapm_paraprobe_results_transcoder/ENTRY/USER/role-field>`
* :ref:`/NXapm_paraprobe_results_transcoder/ENTRY/USER/social_media_name-field </NXapm_paraprobe_results_transcoder/ENTRY/USER/social_media_name-field>`
* :ref:`/NXapm_paraprobe_results_transcoder/ENTRY/USER/social_media_platform-field </NXapm_paraprobe_results_transcoder/ENTRY/USER/social_media_platform-field>`
* :ref:`/NXapm_paraprobe_results_transcoder/ENTRY/USER/telephone_number-field </NXapm_paraprobe_results_transcoder/ENTRY/USER/telephone_number-field>`
* :ref:`/NXapm_paraprobe_results_transcoder/ENTRY/visualization-group </NXapm_paraprobe_results_transcoder/ENTRY/visualization-group>`
* :ref:`/NXapm_paraprobe_results_transcoder/ENTRY/visualization/xdmf_topology-field </NXapm_paraprobe_results_transcoder/ENTRY/visualization/xdmf_topology-field>`
* :ref:`/NXapm_paraprobe_results_transcoder/ENTRY@version-attribute </NXapm_paraprobe_results_transcoder/ENTRY@version-attribute>`

**NXDL Source**:
  https://github.com/nexusformat/definitions/blob/main/contributed_definitions/NXapm_paraprobe_results_transcoder.nxdl.xml
